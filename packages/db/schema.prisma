generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  role     String
  gigs     Gig[]
  orders   Order[]
  messages Message[]
  payouts  Payout[]
}

model Gig {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  price       Int
  userId      Int
  user        User   @relation(fields: [userId], references: [id])
  orders      Order[]
}

model Order {
  id       Int   @id @default(autoincrement())
  gigId    Int
  buyerId  Int
  sellerId Int
  status   String
  amount   Int
  gig      Gig   @relation(fields: [gigId], references: [id])
  buyer    User  @relation("buyer", fields: [buyerId], references: [id])
  seller   User  @relation("seller", fields: [sellerId], references: [id])
  review   Review?
  messages Message[]
  dispute  Dispute?
}

model Review {
  id      Int   @id @default(autoincrement())
  orderId Int   @unique
  rating  Int
  comment String
  order   Order @relation(fields: [orderId], references: [id])
}

model Category {
  id          Int    @id @default(autoincrement())
  name        String
  description String
}

model Message {
  id        Int      @id @default(autoincrement())
  orderId   Int
  senderId  Int
  text      String
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
  sender    User     @relation(fields: [senderId], references: [id])
}

model Payout {
  id        Int      @id @default(autoincrement())
  userId    Int
  amount    Int
  status    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Dispute {
  id        Int      @id @default(autoincrement())
  orderId   Int      @unique
  reason    String
  status    String
  createdAt DateTime @default(now())
  order     Order    @relation(fields: [orderId], references: [id])
}
